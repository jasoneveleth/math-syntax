# Architecture

The following are Pratt parsers in increasing levels of difficulty

- `infix.py` just does infix
- `prefix.py` adds prefix parsing
- `juxt.py` adds implicit * juxtapose
- `paren.py` adds parethesis grouping and function application

They are meant to be looked at in order using `diff` to see the changes required.
I have spent a lot of time making it as intelligible as possible so hopefully no explanation
is necessary.

Run tests with `python test.py infix prefix juxt paren` or just `python test.py paren`.

# Output

The return value from `parse` in each parser will stringify as an S-expression.
If you want another stringification, checkout the `test.py` which also has RPN, python, fully parenthesized

## missing:

- '>=' '>' '<' '<=' comparison
- '==' '!=' && || boolean operators
- {1, 2, 3} sets, vector [1, 2, 3]
- \in \subset \union \intersection \difference \disjoint-union (or +) set ops

